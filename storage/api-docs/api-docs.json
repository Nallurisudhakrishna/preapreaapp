{
    "openapi": "3.0.0",
    "info": {
        "title": "L5 OpenApi",
        "description": "L5 Swagger OpenApi description",
        "contact": {
            "email": "customer@prepareurself"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "1.0.0"
    },
    "paths": {
        "/api/get-banner": {
            "post": {
                "tags": [
                    "Banner"
                ],
                "description": "Get all banner image and title  in Prepareurself",
                "operationId": "App\\Http\\Controllers\\BannerController::wsGetBanner",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "token",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{[error_code=>0,msg=>'success']}"
                    }
                }
            }
        },
        "/api/get-courses": {
            "post": {
                "tags": [
                    "Courses"
                ],
                "description": "Get all courses data",
                "operationId": "App\\Http\\Controllers\\CourseController::wsGetAllCourses",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "token",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{[error_code=>0,msg=>'success']}"
                    }
                }
            }
        },
        "/api/get-all-preferences": {
            "post": {
                "tags": [
                    "User"
                ],
                "description": "Get all Preferences for a User available in Prepareurself",
                "operationId": "App\\Http\\Controllers\\CourseController::wsGetAllPreferences",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "token",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{[error_code=>0,msg=>'success']}"
                    }
                }
            }
        },
        "/api/course": {
            "post": {
                "tags": [
                    "Courses"
                ],
                "description": "Get a courses data",
                "operationId": "App\\Http\\Controllers\\CourseController::wsGetCourse",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "token",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "course_id",
                        "in": "query",
                        "description": "Course_id of a course",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{[error_code=>0,msg=>'success']}"
                    }
                }
            }
        },
        "/api/get-course-quiz": {
            "post": {
                "tags": [
                    "Quiz"
                ],
                "description": "Get a Quiz for a particular user for a particular course",
                "operationId": "App\\Http\\Controllers\\CourseQuizController::getCourseQuiz",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "token",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "course_id",
                        "in": "query",
                        "description": "Course id for a particular course",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "level",
                        "in": "query",
                        "description": "easy|medium|hard",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{[error_code=>0,msg=>'success']}"
                    }
                }
            }
        },
        "/api/save-course-quiz-response-single": {
            "post": {
                "tags": [
                    "Quiz"
                ],
                "description": "save a Quiz Response for a particular user for a particular course",
                "operationId": "App\\Http\\Controllers\\CourseQuizController::saveCourseQuizResponseSingle",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "token",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "quiz_id",
                        "in": "query",
                        "description": "Quiz id for a particular user and a particular course",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "question_id",
                        "in": "query",
                        "description": "question id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "answer_id",
                        "in": "query",
                        "description": "option id for correct answer",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{[error_code=>0,msg=>'success']}"
                    }
                }
            }
        },
        "/api/save-course-quiz-response": {
            "post": {
                "tags": [
                    "Quiz"
                ],
                "description": "save a Quiz Response for a particular user for a particular course",
                "operationId": "App\\Http\\Controllers\\CourseQuizController::saveCourseQuizResponse",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "token",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "quiz_id",
                        "in": "query",
                        "description": "Quiz id for a particular user and a particular course",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "properties": {
                                        "question_id": {
                                            "description": "User name",
                                            "type": "integer"
                                        },
                                        "answer_id": {
                                            "description": "Education",
                                            "type": "integer"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "{[error_code=>0,msg=>'success']}"
                    }
                }
            }
        },
        "/api/do-reply": {
            "post": {
                "tags": [
                    "Forum"
                ],
                "description": "reply a query for a particular course",
                "operationId": "App\\Http\\Controllers\\OpenForumController::doReply",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "token",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "query_id",
                        "in": "query",
                        "description": "query_id of a course",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "images[]",
                        "in": "query",
                        "description": "Attachment name in reply only images for now",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "reply",
                        "in": "query",
                        "description": "reply means your answer",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{[error_code=>0,msg=>'success']}"
                    }
                }
            }
        },
        "/api/ask-query": {
            "post": {
                "tags": [
                    "Forum"
                ],
                "description": "Ask a query for a particular course",
                "operationId": "App\\Http\\Controllers\\OpenForumController::askQuery",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "token",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "course_id",
                        "in": "query",
                        "description": "Course_id of a course",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "images[]",
                        "in": "query",
                        "description": "Attachment name in query only images for now",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "query",
                        "in": "query",
                        "description": "query means your question",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{[error_code=>0,msg=>'success']}"
                    }
                }
            }
        },
        "/api/edit-query": {
            "post": {
                "tags": [
                    "Forum"
                ],
                "description": "edit a query for a particular course asked by you",
                "operationId": "App\\Http\\Controllers\\OpenForumController::editQuery",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "token",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "query_id",
                        "in": "query",
                        "description": "query_id of a course",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "query",
                        "in": "query",
                        "description": "query means your question",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{[error_code=>0,msg=>'success']}"
                    }
                }
            }
        },
        "/api/get-query-replies": {
            "post": {
                "tags": [
                    "Forum"
                ],
                "description": "get replies for a query for a particular course",
                "operationId": "App\\Http\\Controllers\\OpenForumController::getQueryReplies",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "token",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "query_id",
                        "in": "query",
                        "description": "query_id of a course",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "count no of query replies in  a page default count is 10",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "page no for query replies default page is 1 ",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{[error_code=>0,msg=>'success']}"
                    }
                }
            }
        },
        "/api/get-queries": {
            "post": {
                "tags": [
                    "Forum"
                ],
                "description": "get queries for a particular course",
                "operationId": "App\\Http\\Controllers\\OpenForumController::getQueries",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "token",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "course_id",
                        "in": "query",
                        "description": "course_id of a course",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "count no of queries in  a page default count is 10",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "page no for queries default page is 1 ",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{[error_code=>0,msg=>'success']}"
                    }
                }
            }
        },
        "/api/upload-query-image": {
            "post": {
                "tags": [
                    "Forum"
                ],
                "description": "upload a image of a query",
                "operationId": "App\\Http\\Controllers\\OpenForumController::getQueryImage",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "token",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "type",
                        "in": "query",
                        "description": "0: if image belongs to query and 1 if image belongs to replies",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "image",
                        "in": "query",
                        "description": "image to be uploaded",
                        "required": true,
                        "schema": {
                            "type": "file"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{[error_code=>0,msg=>'uploaded Successfully Done']}"
                    }
                }
            }
        },
        "/api/clap-on-reply": {
            "post": {
                "tags": [
                    "Forum"
                ],
                "description": "clap replies for a query for a particular course",
                "operationId": "App\\Http\\Controllers\\OpenForumController::clapOnReply",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "token",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "reply_id",
                        "in": "query",
                        "description": "reply_id of a course",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "description": "0=>to add clap and 1 to remove clap",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{[error_code=>0,msg=>'success']}"
                    }
                }
            }
        },
        "/api/get-projects": {
            "post": {
                "tags": [
                    "Projects"
                ],
                "description": "Get all projects of a particular course",
                "operationId": "App\\Http\\Controllers\\ProjectController::wsGetAllProjects",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "token",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "course_id",
                        "in": "query",
                        "description": "course_id of Course ",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "level",
                        "in": "query",
                        "description": "Level of projects : easy|medium|hard",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "Count of projects,If not passed by default value of count is 10",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "page no  of projects,If not passed by default value of page is 1",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{[error_code=>0,msg=>'success'],[error_code=>1,msg=>'Course Id is Invalid'],[error_code=>2,'msg'=>'Course Id is Compulsory']}"
                    }
                }
            }
        },
        "/api/get-suggested-projects": {
            "post": {
                "tags": [
                    "Projects"
                ],
                "description": "Get all projects suggested for a particular user",
                "operationId": "App\\Http\\Controllers\\ProjectController::wsGetAllSuggestedProjects",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "token",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{[error_code=>0,msg=>'success']}"
                    }
                }
            }
        },
        "/api/project": {
            "post": {
                "tags": [
                    "Projects"
                ],
                "description": "Get a project",
                "operationId": "App\\Http\\Controllers\\ProjectController::wsGetProject",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "token",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "project_id",
                        "in": "query",
                        "description": "project_id of Project ",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{[error_code=>0,msg=>'success'],[error_code=>1,msg=>'Project Id is Invalid'],[error_code=>2,'msg'=>'project Id is Compulsory']}"
                    }
                }
            }
        },
        "/api/get-resources": {
            "post": {
                "tags": [
                    "Resources"
                ],
                "description": "Get all resources of a particular topic",
                "operationId": "App\\Http\\Controllers\\ResourceController::wsGetAllResources",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "token",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "topic_id",
                        "in": "query",
                        "description": "topic_id of Topic ",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "type",
                        "in": "query",
                        "description": "Type of resources : theory|video",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "Count of resources,If not passed by default value of count is 10",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number , if not then by default page 1",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{[error_code=>0,msg=>'success'],[error_code=>1,msg=>'Topic Id is Invalid'],[error_code=>2,'msg'=>'Topic Id is Compulsory']}"
                    }
                }
            }
        },
        "/api/resource": {
            "post": {
                "tags": [
                    "Resources"
                ],
                "description": "Get a resources",
                "operationId": "App\\Http\\Controllers\\ResourceController::wsGetResource",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "token",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "resource_id",
                        "in": "query",
                        "description": "resource_id of Resource ",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{[error_code=>0,msg=>'success'],[error_code=>1,msg=>'Resource Id is Invalid'],[error_code=>2,'msg'=>'Resource Id is Compulsory']}"
                    }
                }
            }
        },
        "/api/hit-like": {
            "post": {
                "tags": [
                    "Likes | Dislikes | Views"
                ],
                "description": "Like/Dislike a resource or peoject in prepareurself",
                "operationId": "App\\Http\\Controllers\\ResourceProjectLikesController::wsHitlike",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "token",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "like",
                        "in": "query",
                        "description": "[0 => for like , 1 => for Dislike]",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "project_id",
                        "in": "query",
                        "description": "project id of a particular project u want to like or dislike",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "resource_id",
                        "in": "query",
                        "description": "resources id of a particular resource u want to like or dislike",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{[success=>true,message=>'like successfull'],[success=>true,message=>'Dislike successfull']}"
                    }
                }
            }
        },
        "/api/get-my-liked-things": {
            "post": {
                "tags": [
                    "Likes | Dislikes | Views"
                ],
                "description": "Get all my liked things data",
                "operationId": "App\\Http\\Controllers\\ResourceProjectLikesController::wsGetMyLikedThing",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "token",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "Count ,If not passed by default value of count is 10",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "type",
                        "in": "query",
                        "description": "type=>project|resource",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number , if not then by default page 1",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{[error_code=>0,msg=>'success']}"
                    }
                }
            }
        },
        "/api/view-resource-project": {
            "post": {
                "tags": [
                    "Likes | Dislikes | Views"
                ],
                "description": "View a resource or project in prepareurself",
                "operationId": "App\\Http\\Controllers\\ResourceProjectViewsController::wsViewResource",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "token",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "project_id",
                        "in": "query",
                        "description": "project id of a particular project u want to view",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "resource_id",
                        "in": "query",
                        "description": "resources id of a particular resource u want to view",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{[success=>true,message=>'like successfull'],[success=>true,message=>'Dislike successfull']}"
                    }
                }
            }
        },
        "/api/search": {
            "post": {
                "tags": [
                    "Search"
                ],
                "description": "Get all search related items",
                "operationId": "App\\Http\\Controllers\\SearchController::search",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "token",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "query",
                        "in": "query",
                        "description": "string data needs to be search",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "Count of result,If not passed by default value of count is 10",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number , if not then by default page 1",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{[error_code=>0,msg=>'success']}"
                    }
                }
            }
        },
        "/api/search-without-pagination": {
            "post": {
                "tags": [
                    "Search"
                ],
                "description": "Get all search related items",
                "operationId": "App\\Http\\Controllers\\SearchController::searchWithOutPagination",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "token",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "query",
                        "in": "query",
                        "description": "string data needs to be search",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{[error_code=>0,msg=>'success']}"
                    }
                }
            }
        },
        "/api/search-inside-course": {
            "post": {
                "tags": [
                    "Search"
                ],
                "description": "Get all search related items for a particular course",
                "operationId": "App\\Http\\Controllers\\SearchController::searchCourse",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "token",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "query",
                        "in": "query",
                        "description": "string data needs to be search",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "course_id",
                        "in": "query",
                        "description": "course_id for the course",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "Count of result,If not passed by default value of count is 10",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number , if not then by default page 1",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{[error_code=>0,msg=>'success']}"
                    }
                }
            }
        },
        "/api/get-topics": {
            "post": {
                "tags": [
                    "Topics"
                ],
                "description": "Get all topics of a particular course",
                "operationId": "App\\Http\\Controllers\\TopicController::wsGetAllTopics",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "token",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "course_id",
                        "in": "query",
                        "description": "Course id of course",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "Count of resources,If not passed by default value of count is 10",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number , if not then by default page 1",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{[error_code=>0,msg=>'success'],[error_code=>1,msg=>'Course Id is Invalid'],[error_code=>2,'msg'=>'Course Id is Compulsory']}"
                    }
                }
            }
        },
        "/api/get-suggested-topics": {
            "post": {
                "tags": [
                    "Topics"
                ],
                "description": "Get all topics suggested for a particular user",
                "operationId": "App\\Http\\Controllers\\TopicController::wsGetAllSuggestedTopics",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "token",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{[error_code=>0,msg=>'success']}"
                    }
                }
            }
        },
        "/api/update-user-preferences": {
            "post": {
                "tags": [
                    "User"
                ],
                "description": "Update user preferences",
                "operationId": "App\\Http\\Controllers\\UserAccountController::updateUserPreferences",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "token",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "preferences[]",
                        "in": "query",
                        "description": "User Preferences Please enter only integers",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "integer"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{[error_code=>0,msg=>'Update preferences Successfully Done']}"
                    }
                }
            }
        },
        "/api/rate-course": {
            "post": {
                "tags": [
                    "Courses"
                ],
                "description": "Rate Course by user or update rating on course by user",
                "operationId": "App\\Http\\Controllers\\UserAccountController::rateCourse",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "token",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "course_id",
                        "in": "query",
                        "description": "User Preferences Please enter only integers",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "rating",
                        "in": "query",
                        "description": "rating on course Only intergers allowed 1,2,3,4,5",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{[error_code=>0,msg=>'Thanks for rating']}"
                    }
                }
            }
        },
        "/api/add-to-user-preferences": {
            "post": {
                "tags": [
                    "User"
                ],
                "description": "Add Course to user preferences",
                "operationId": "App\\Http\\Controllers\\UserAccountController::addToUserPreferences",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "token",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "course_id",
                        "in": "query",
                        "description": "Course id for the preference",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "type",
                        "in": "query",
                        "description": "type: 1 to add and 0 to remove ",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{[error_code=>0,msg=>'Update preferences Successfully Done']}"
                    }
                }
            }
        },
        "/api/get-user-preferences": {
            "post": {
                "tags": [
                    "User"
                ],
                "description": "get user preferences",
                "operationId": "App\\Http\\Controllers\\UserAccountController::listUserPreferences",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "token",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{[error_code=>0,msg=>'Update preferences Successfully Done']}"
                    }
                }
            }
        },
        "/api/register": {
            "post": {
                "tags": [
                    "User"
                ],
                "description": "Register a user to prepareurself",
                "operationId": "App\\Http\\Controllers\\UserAuthController::register",
                "parameters": [
                    {
                        "name": "first_name",
                        "in": "query",
                        "description": "first name of user",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "last_name",
                        "in": "query",
                        "description": "last name of user",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "android_token",
                        "in": "query",
                        "description": "android token of user",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "password",
                        "in": "query",
                        "description": "Password of user Min length 8 characters",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "email",
                        "in": "query",
                        "description": "Email of user",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{[error_code=>1,msg=>'Invalid user data'],[error_code=>0,msg=>'Registeration Successfully Done']}"
                    }
                }
            }
        },
        "/api/social-register": {
            "post": {
                "tags": [
                    "User"
                ],
                "description": "Register a user to prepareurself through google",
                "operationId": "App\\Http\\Controllers\\UserAuthController::socialRegisterLogin",
                "parameters": [
                    {
                        "name": "first_name",
                        "in": "query",
                        "description": "first name of user",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "last_name",
                        "in": "query",
                        "description": "last name of user",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "android_token",
                        "in": "query",
                        "description": "android token of user",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "google_id",
                        "in": "query",
                        "description": "Password of user Min length 8 characters",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "email",
                        "in": "query",
                        "description": "Email of user",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "phone_number",
                        "in": "query",
                        "description": "phone_number of user",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "dob",
                        "in": "query",
                        "description": "dob of user",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "profile_image",
                        "in": "query",
                        "description": "profile_image of user",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{[error_code=>1,msg=>'Invalid user data'],[error_code=>0,msg=>'Registeration Successfully Done']}"
                    }
                }
            }
        },
        "/api/check-username": {
            "post": {
                "tags": [
                    "User"
                ],
                "description": "Register a user to prepareurself",
                "operationId": "App\\Http\\Controllers\\UserAuthController::checkUserName",
                "parameters": [
                    {
                        "name": "username",
                        "in": "query",
                        "description": "check unique username of user",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{[error_code=>2,msg=>'Username Already Exits'],[error_code=>0,msg=>'Username available'],[error_code=>1,msg=>'Missing user name']}"
                    }
                }
            }
        },
        "/api/login": {
            "post": {
                "tags": [
                    "User"
                ],
                "description": "login a user to prepareurself",
                "operationId": "App\\Http\\Controllers\\UserAuthController::login",
                "parameters": [
                    {
                        "name": "email",
                        "in": "query",
                        "description": "Email of user",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "password",
                        "in": "query",
                        "description": "password of user",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "android_token",
                        "in": "query",
                        "description": "android token of user",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{[error_code=>0,msg=>'login Successfully Done']}"
                    }
                }
            }
        },
        "/api/update-user": {
            "post": {
                "tags": [
                    "User"
                ],
                "description": "login a user to prepareurself",
                "operationId": "App\\Http\\Controllers\\UserAuthController::updateUserData",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "token",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "first_name",
                        "in": "query",
                        "description": "first name of user",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "last_name",
                        "in": "query",
                        "description": "last name of user",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "dob",
                        "in": "query",
                        "description": "date of birth of user",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "phone_number",
                        "in": "query",
                        "description": "user phone number",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "android_token",
                        "in": "query",
                        "description": "token for notification",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "profile_image",
                        "in": "query",
                        "description": "Profile image of the user",
                        "required": false,
                        "schema": {
                            "type": "file"
                        }
                    },
                    {
                        "name": "preferences[]",
                        "in": "query",
                        "description": "User Preferences Please enter only integers",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "integer"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{[error_code=>0,msg=>'Update Successfully Done']}"
                    }
                }
            }
        },
        "/api/update-password": {
            "post": {
                "tags": [
                    "User"
                ],
                "description": "update a user password in prepareurself",
                "operationId": "App\\Http\\Controllers\\UserAuthController::updatePassword",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "token",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "oldPassword",
                        "in": "query",
                        "description": "Old password of the user",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "newPassword",
                        "in": "query",
                        "description": "New Password of the user",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{[error_code=>0,msg=>'Successfully Password Changed']}"
                    }
                }
            }
        },
        "/api/resend-verification-mail": {
            "post": {
                "tags": [
                    "User"
                ],
                "description": "resend verification mail if not received in prepareurself",
                "operationId": "App\\Http\\Controllers\\UserAuthController::wsResendVerificationMail",
                "parameters": [
                    {
                        "name": "email",
                        "in": "query",
                        "description": "Email of user",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{[error_code=>0,msg=>'resend mail Successfully Done']}"
                    }
                }
            }
        },
        "/api/forget-password": {
            "post": {
                "tags": [
                    "User"
                ],
                "description": "Send Forgot Password Mail to user in prepareurself",
                "operationId": "App\\Http\\Controllers\\UserAuthController::forgetPassword",
                "parameters": [
                    {
                        "name": "email",
                        "in": "query",
                        "description": "Email of the user",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{[error_code=>0,msg=>'Forgot password Mail sent to your email']}"
                    }
                }
            }
        },
        "/api/get-home-page": {
            "post": {
                "tags": [
                    "HomePage"
                ],
                "description": "Get all home page data",
                "operationId": "App\\Http\\Controllers\\UserAuthController::wsGetHomePage",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "token",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{[error_code=>0,msg=>'success']}"
                    }
                }
            }
        },
        "/api/user": {
            "post": {
                "tags": [
                    "User"
                ],
                "description": "Get User details",
                "operationId": "App\\Http\\Controllers\\UserAuthController::getUser",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "token",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{[error_code=>0,msg=>'success']}"
                    }
                }
            }
        },
        "/api/store-feedback": {
            "post": {
                "tags": [
                    "User Feedback"
                ],
                "description": "Store Feedback of a user",
                "operationId": "App\\Http\\Controllers\\UserFeedbackController::storeFeedback",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "token",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "answers[]",
                        "in": "query",
                        "description": "User Preferences Please enter only String",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{[error_code=>0,msg=>'success'],[error_code=>1,msg=>'failure']}"
                    }
                }
            }
        }
    },
    "components": {
        "securitySchemes": {
            "api_key_security_example": {
                "type": "apiKey",
                "description": "A short description for security scheme",
                "name": "api_key",
                "in": "header"
            }
        }
    }
}